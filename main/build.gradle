plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
}

group = 'org.sopt.makers.crew'
version = '1.1.2'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.5'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'

    // jsonb 타입 핸들링 위함
    implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.6.0'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation 'com.auth0:java-jwt:4.4.0'

    // h2
    runtimeOnly 'com.h2database:h2'

    // mac m1 setting
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'

    // test container
    testImplementation 'org.testcontainers:testcontainers:1.17.3' // TC 의존성
    testImplementation 'org.testcontainers:junit-jupiter:1.16.2'  // TC 의존성
    testImplementation 'org.testcontainers:postgresql:1.17.3'     // PostgreSQL 컨테이너 사용
    testImplementation 'org.testcontainers:jdbc'           // DB와의 JDBC connection
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'
}

tasks.named('test') {
    useJUnitPlatform()

    finalizedBy jacocoTestCoverageVerification

    jacoco {
        excludes += [
                "org/crew/main/MainApplication.class",
                "**/response/*",
                "**/config/*",
                "**/dto/*",
                "**/vo/*",
                "**/exception/*",
        ]
    }
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencyManagement {

    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }

}

jacocoTestReport {
    reports {
        xml.required.set(true)
        csv.required.set(true)
        html.required.set(true)
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            "org/crew/main/MainApplication.class",
                            "**/response/*",
                            "**/config/*",
                            "org/crew/**/*Dto.*",
                            "**/dto/*",
                            "**/vo/*",
                            "**/exception/*",
                    ])
                })
        )
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            // ...

            excludes = [
                    '*.*Application',
                    '*.*Exception',
                    '*.Dto',
                    '*.response'
                    // ...
            ]
        }
    }
}