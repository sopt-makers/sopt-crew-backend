version: "3.7"

services:
  caddy:
    container_name: caddy
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      caddy.log: ""
      caddy.log.output: stdout
      caddy.log.format: json
      caddy.log.include: http.log.access.localhost

  swagger:
    image: swaggerapi/swagger-ui
    env_file:
      - ./.env
    container_name: swagger
    environment:
      - URLS=
        [
        {url:'/api-docs/json', name:'spring'},
        {url:'/api-docs-json', name:'nestjs'},
        ]
      - BASE_URL=/docs
      - SPRING_NAME=${SPRING_NAME}
      - NESTJS_NAME=${NESTJS_NAME}
    depends_on:
      - ${SPRING_NAME}
      - ${NESTJS_NAME}
    networks:
      - caddy
    labels:
      caddy.route: /docs*
      caddy.route.reverse_proxy: "{{ upstreams 8080 }}"

  nestjs-green:
    image: makerscrew/server:latest
    container_name: nestjs-green
    ports:
      - 3001:3000
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - TZ=Asia/Seoul
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SCHEMA=${DB_SCHEMA}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - nestjs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - caddy
    labels:
      caddy.log: "localhost"
      # for Swagger spec
      caddy.route_0: /api-docs-json
      caddy.route_0.reverse_proxy: "{{ upstreams 3000 }}"
      # for health check
      caddy.route_1: /
      caddy.route_1.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_2: /auth
      caddy.route_2.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_3: /comment/v1
      caddy.route_3.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_4: /comment/v1/*
      caddy.route_4.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_5: /meeting/apply
      caddy.route_5.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_6: /meeting
      caddy.route_6.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_7: /meeting/v1/*
      caddy.route_7.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_8: /meeting/*
      caddy.route_8.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_9: /notice/v1
      caddy.route_9.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_10: /notice/v1/*
      caddy.route_10.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_11: /post/v1
      caddy.route_11.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_12: /post/v1/*
      caddy.route_12.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_13: /users
      caddy.route_13.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_14: /users/*
      caddy.route_14.reverse_proxy: "{{ upstreams 3000 }}"

  spring-green:
    image: makerscrew/main:latest
    environment:
      - TZ=Asia/Seoul
    container_name: spring-green
    ports:
      - 4001:4000
    restart: unless-stopped
    depends_on:
      - nestjs-green
    networks:
      - caddy
    labels:
      caddy.log: "localhost"
      # for Swagger spec
      caddy.route_0: /api-docs/json
      caddy.route_0.reverse_proxy: "{{ upstreams 4000 }}"
      # for health check
      caddy.route_1: /health/*
      caddy.route_1.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_2: /user/v2
      caddy.route_2.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_3: /user/v2/*
      caddy.route_3.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_4: /meeting/v2/*
      caddy.route_4.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_5: /post/v2
      caddy.route_5.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_6: /comment/v2
      caddy.route_6.reverse_proxy: "{{ upstreams 4000 }}"

  nestjs-blue:
    image: makerscrew/server:latest
    env_file:
      - ./.env
    environment:
      - TZ=Asia/Seoul
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SCHEMA=${DB_SCHEMA}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - JWT_SECRET=${JWT_SECRET}
    container_name: nestjs-blue
    ports:
      - 3002:3000
    restart: unless-stopped
    networks:
      - caddy
    labels:
      caddy.log: "localhost"
      # for Swagger spec
      caddy.route_0: /api-docs-json
      caddy.route_0.reverse_proxy: "{{ upstreams 3000 }}"
      # for health check
      caddy.route_1: /
      caddy.route_1.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_2: /auth
      caddy.route_2.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_3: /comment/v1
      caddy.route_3.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_4: /comment/v1/*
      caddy.route_4.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_5: /meeting/apply
      caddy.route_5.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_6: /meeting
      caddy.route_6.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_7: /meeting/v1/*
      caddy.route_7.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_8: /meeting/*
      caddy.route_8.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_9: /notice/v1
      caddy.route_9.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_10: /notice/v1/*
      caddy.route_10.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_11: /post/v1
      caddy.route_11.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_12: /post/v1/*
      caddy.route_12.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_13: /users
      caddy.route_13.reverse_proxy: "{{ upstreams 3000 }}"
      caddy.route_14: /users/*
      caddy.route_14.reverse_proxy: "{{ upstreams 3000 }}"

  spring-blue:
    image: makerscrew/main:latest
    environment:
      - TZ=Asia/Seoul
    container_name: spring-blue
    ports:
      - 4002:4000
    restart: unless-stopped
    depends_on:
      - nestjs-blue
    networks:
      - caddy
    labels:
      caddy.log: "localhost"
      # for Swagger spec
      caddy.route_0: /api-docs/json
      caddy.route_0.reverse_proxy: "{{ upstreams 4000 }}"
      # for health check
      caddy.route_1: /health/*
      caddy.route_1.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_2: /user/v2
      caddy.route_2.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_3: /user/v2/*
      caddy.route_3.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_4: /meeting/v2/*
      caddy.route_4.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_5: /post/v2
      caddy.route_5.reverse_proxy: "{{ upstreams 4000 }}"
      caddy.route_6: /comment/v2
      caddy.route_6.reverse_proxy: "{{ upstreams 4000 }}"

networks:
  caddy:
    external: true
